name: Flutter CI

# This workflow is triggered on pushes to the repository.

on:
  push:
    branches: [ master, main ]
  # pull_request:
    # branches: [ master, main ]
    # This ignores PR from any branches to master branch.
    # branches-ignore:
    #   - 'master'
      
    
jobs:

  code-analysis-and-testing:
    name: Code analysis and testing
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Slack Notify Build
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
      uses: pullreminders/slack-action@master
      with:
        args: '{\"channel\":\"C0278LELCMV\",\"blocks\":[{\"type\":\"section\",\"text\":\"<${{ github.event.pull_request.html_url }}|View Pull Request>\"}]'


    - name: Set up Flutter
      uses: subosito/flutter-action@v1.4.0
      with:
        channel: 'stable'

    - name: Flutter clean
      run: flutter clean

    - name: Get pub dependencies
      run: flutter pub get

    # - name: Flutter analyze
    #   run: flutter analyze

    # - name: Flutter test
    #   run: flutter test
 
    - name: Prepare Secret Files
      run: |
        echo "${{ secrets.KEYSTORE }}" > upload-keystore.jks.asc
        gpg -d --passphrase "${{ secrets.KEYSTORE_PASSPHRASE }}" --batch upload-keystore.jks.asc > upload-keystore.jks

        echo "${{ secrets.KEYSTORE_PROPERTIES }}" > key.properties.asc
        gpg -d --passphrase "${{ secrets.KEYSTORE_PROPERTIES_PASSPHRASE }}" --batch key.properties.asc > key.properties   
        
        # echo "${{ secrets.AGCONNECT_SERVICES }}" > agconnect-services.json.asc    
        # gpg -d --passphrase "${{ secrets.AGCONNECT_SERVICES_PASSPHRASE }}" --batch agconnect-services.json.asc > app/agconnect-services.json    
    
    - name: Build APK
      run: flutter build appbundle
    
    - name: Upload APK artifact 
      uses: actions/upload-artifact@v1
      with:
        name: release-apk
        path: build/app/outputs/bundle/release/app-release.aab

    - name: Upload to Play Store
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.FS_ANDROID_SERVICE_ACCOUNT_JSON }}
        packageName: com.inapp_purchase_test
        releaseFile: build/app/outputs/bundle/release/app-release.aab
        releaseFiles: build/app/outputs/bundle/release/*.aab
        track: alpha
        inAppUpdatePriority: 2
        userFraction: 0.33
        # whatsNewDirectory: distribution/whatsnew
        # mappingFile: app/build/outputs/mapping/release/mapping.txt